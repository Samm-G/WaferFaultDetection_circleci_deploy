@startuml Flow
!theme materia
skinparam defaultFontName Verdana
skinparam componentStyle rectangle

' (Alt+D to Preview in VSCode..)

/'
Check out:

https://github.com/conda/conda/tree/master/docs/source/umls
https://github.com/plantuml-stdlib/C4-PlantUML 

Full Docs:
https://plantuml.com/
for more examples

'/

' TODO: LATER EMBED THIS DIAGRAM IN RST..
' Check Conda Docs, How they have done this..

'left to right direction

title Architecture Pipelines

' skinparam sequenceMessageAlign center
' Alice -> Bob : Hi
' Bob -> Alice : This is very long
/'
(Code) -> (Local System)
(Code) -> (Github)
(Github) -> (CircleCI)
(CircleCI) -> (Heroku) : Yaml-File
'/
'left to right direction
'top to bottom direction
/'
component Model-Training {
  [START]
  component "Data Ingestion" {
    [START] -right-> ["Data for Training (Batches)"]
    ["Data for Training (Batches)"] -right-> [Data Validation]
    [Data Validation] -right-> [Data Transformation]
    [Data Transformation] -right-> [Data Insertion in DB]
  }
  [Data Insertion in DB] -down-> [Export Data from DB to CSV for training] : "N-batch files"
  [Export Data from DB to CSV for training] -left-> [Data_Preprocessing]
  [Data_Preprocessing] -left-> [Data_Clustering]
  [Data_Clustering] -left-> [Get Best model for Each Cluster]
  [Get Best model for Each Cluster] -left-> [Hyperparameter_Tuning]
  [Hyperparameter_Tuning] -down-> [Model Saving]
}

[Model Saving] --> [Pushing App To Cloud]
[Pushing App To Cloud] --> [Application Start]

component "Prediction" as Pred {
  [Data from client to be Predicted] -right-> [Data_Validation]
  [Data_Validation] -right-> [Data_Transformation]
  [Data_Transformation] -right-> [Data Insertion to DB]
  [Data Insertion to DB] -right-> [Export Data from DB to CSV for prediction]
  [Export Data from DB to CSV for prediction] -down-> [Data Preproccessing]
  [Data Preproccessing] -left-> [Data Clustering]
  [Data Clustering] -left-> [Model Call for Specific Cluster]
  [Model Call for Specific Cluster] -left-> [Prediction]
  [Prediction] -left-> [Export Prediction to CSV]
  [Export Prediction to CSV] -left-> [END]
}
'/
component "Model Training" as ModelTraining {
  [START]
  component "Data Ingestion" {
    [START] --> [Data for Training (Batches)]
    [Data for Training (Batches)] --> [Data Validation]
    [Data Validation] --> [Data Transformation]
    [Data Transformation] --> [Data Insertion in DB]
  }
  [Data Insertion in DB] --> [Export Data from DB to CSV for training] : "N-batch files"
  [Export Data from DB to CSV for training] --> [Data_Preprocessing]
  [Data_Preprocessing] --> [Data_Clustering]
  [Data_Clustering] --> [Cluster 1]
  [Data_Clustering] --> [Cluster 2]
  [Data_Clustering] --> [Cluster ..]
  [Cluster 1] --> [Model 1]
  [Cluster 2] --> [Model 2]
  [Cluster ..] --> [Model ..]
  [Model 1] --> [Get Best model for Each Cluster]
  [Model 2] --> [Get Best model for Each Cluster]
  [Model ..] --> [Get Best model for Each Cluster]
  [Get Best model for Each Cluster] --> [Hyperparameter_Tuning]
  [Hyperparameter_Tuning] --> [Model Saving]
}
component "Deployment" {
  [Model Saving] --> [Pushing App To Cloud]
  [Pushing App To Cloud] --> [Application Start]
}

component "Prediction" as Pred {
  database "Data Insertion to DB" as Db

  [Data from client to be Predicted] --> [Data_Validation]
  [Data_Validation] --> [Data_Transformation]
  [Data_Transformation] --> Db
  Db --> [Export Data from DB to CSV for prediction]
  [Export Data from DB to CSV for prediction] --> [Data Preproccessing]
  [Data Preproccessing] --> [Data Clustering]
  [Data Clustering] --> [Model Call for Specific Cluster] : "Cluster No."
  [Model Call for Specific Cluster] --> [Prediction]
  [Prediction] --> [Export Prediction to CSV] : Predictions CSV
  [Export Prediction to CSV] --> [END]
}


component "Model Retraining" as ModelRetraining {

}

component Logging {

}

component Monitoring {

}

' SPACING '
ModelTraining -[hidden]-> Pred
Pred -[hidden]-> ModelRetraining
Pred -[hidden]-> Logging
Pred -[hidden]-> Monitoring

@enduml